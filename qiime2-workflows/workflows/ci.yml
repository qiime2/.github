name: ''

on:
  workflow_dispatch: {}

# CI HANDLES - NORMAL WORKFLOW
# 1. PR wants to be merged into dev branch
# 2. A commit has been created on a dev branch

# NEWER DISTRO TRIAL FEATURE - NOT IMMEDIATELY NECESSARY
# 3. A pull request against non-dev on a feature branch

# DO NOTHING
# 4. A commit has been created on a non-dev branch (we do nothing here)

env:
  distros: '[ "core" ]'
  channel_prefix: '[Conda Channel]'

jobs:
  distro-lookup:
    runs-on: 'ubuntu-latest'
    outputs:
      distros: ${{ steps.lookup.outputs.distros }}

    steps:
      - id: 'lookup'
        shell: bash
        run: |
          echo 'distros=${{ env.distros }}' > $GITHUB_OUTPUT

  evaluate-matrix:
    needs: 'distro-lookup'
    strategy:
      matrix:
        os: ['ubuntu-latest', 'osx-latest']
        distro: ${{ fromJSON(needs.distro-lookup.outputs.distros) }}
    runs-on: ${{ matrix.os }}
  # These outputs get overwritten per matrix iteration, while the package
  # details (i.e. name/version) remain the same across each iteration
    steps:
      - id: 'run-root-alp'
        uses: 'qiime2/action-library-packaging@beta'
        with:
          channel: './channel-${{ matrix.distro }}'

      - uses: actions/upload-artifact@v3
        name: 'Upload channel'
        with:
          name: '${{ env.channel_prefix }} ${{ matrix.distro }}'
          path: './channel-${{ matrix.distro }}'

  notify-library:
    needs: ['distro-lookup', 'evaluate-matrix']
    strategy:
      matrix:
        distro: ${{ fromJSON(needs.distro-lookup.outputs.distros) }}
    runs-on: 'ubuntu-latest'

    steps:
      - uses: actions/download-artifact@v3
        name: 'Download channel'
        with:
          name: '${{ env.channel_prefix }} ${{ matrix.distro }}'
          path: './channel-${{ matrix.distro }}'

      - id: 're-index'
        shell: bash
        run: conda index './channel-${{ matrix.distro }}'

      - uses: actions/upload-artifact@v3
        name: 'Upload channel'
        with:
          name: '${{ env.channel_prefix }} ${{ matrix.distro }}'
          path: './channel-${{ matrix.distro }}'

      - id: 'notify'
        env:
          LIBRARY_TOKEN: ${{ secrets.LIBRARY_TOKEN }}
        uses: 'qiime2/action-library-packaging/notify-library@beta'
        with:
          package-name: # TBD
          package-version: # TBD
          build-target: 'dev'
          distro: ${{ matrix.distro }}
          artifact: '${{ env.channel_prefix }} ${{ matrix.distro }}'
